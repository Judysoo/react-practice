{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-practice\\\\todo-app-fast\\\\src\\\\App.js\";\nimport React, { useReducer, useRef, useCallback } from 'react'; //상태 관리 useState\n\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: '할 일 ${i}',\n      checked: false\n    });\n  }\n\n  return array;\n} //const todoReducer = (state,action) => {\n\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      //새로 추가\n      //{type:INSERT, todo:{id:1, text:'todo', checked:false}}\n      return todos.concat(action.todo);\n\n    case 'REMOVE':\n      //제거\n      //{type:'REMOVE',id:1}\n      return todos.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      //토글\n      //{type:'REMOVE},id:1}\n      return todos.map(todo => todo.id === action.id ? { ...todo,\n        checked: !todo.checked\n      } : todo);\n\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n  //상태값\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  const nextId = useRef(2501); //고윳값으로 사용될 ID\n  //Ref를 사용하여 변수 담기\n\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    dispatch({\n      type: 'INSERT',\n      todo\n    });\n    nextId.current += 1; //nextId 1씩 더하기\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE',\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE',\n      id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(TodoTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App; //미친 존나빨라짐 몇백만배로빨라짐;\n//useReducer를 사용합시다...","map":{"version":3,"sources":["D:/react-practice/todo-app-fast/src/App.js"],"names":["React","useReducer","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","createBulkTodos","array","i","push","id","text","checked","todoReducer","todos","action","type","concat","todo","filter","map","App","dispatch","undefined","nextId","onInsert","current","onRemove","onToggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,WAApC,QAAuD,OAAvD,C,CAAgE;;AAChE,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,IAArB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,EAAE,EAAEF,CADK;AAETG,MAAAA,IAAI,EAAE,UAFG;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAX;AAKD;;AACD,SAAOL,KAAP;AACD,C,CAED;;;AACA,SAASM,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AAAe;AACb;AACA,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACF,SAAK,QAAL;AAAe;AACb;AACA,aAAOJ,KAAK,CAACK,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAA1C,CAAP;;AACF,SAAK,QAAL;AAAe;AACb;AACA,aAAOI,KAAK,CAACM,GAAN,CAAWF,IAAD,IACfA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAE,GAAGQ,IAAL;AAAWN,QAAAA,OAAO,EAAE,CAACM,IAAI,CAACN;AAA1B,OAAxB,GAA8DM,IADzD,CAAP;;AAGF;AACE,aAAOJ,KAAP;AAbJ;AAeD;;AAED,MAAMO,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBtB,UAAU,CAACa,WAAD,EAAcU,SAAd,EAAyBjB,eAAzB,CAApC;AAEA,QAAMkB,MAAM,GAAGvB,MAAM,CAAC,IAAD,CAArB,CAJgB,CAKhB;AACA;;AAEA,QAAMwB,QAAQ,GAAGvB,WAAW,CAAES,IAAD,IAAU;AACrC,UAAMO,IAAI,GAAG;AACXR,MAAAA,EAAE,EAAEc,MAAM,CAACE,OADA;AAEXf,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAU,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA;AAAlB,KAAD,CAAR;AACAM,IAAAA,MAAM,CAACE,OAAP,IAAkB,CAAlB,CAPqC,CAOhB;AACtB,GAR2B,EAQzB,EARyB,CAA5B;AAUA,QAAMC,QAAQ,GAAGzB,WAAW,CAAEQ,EAAD,IAAQ;AACnCY,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBN,MAAAA;AAAlB,KAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,QAAMkB,QAAQ,GAAG1B,WAAW,CAAEQ,EAAD,IAAQ;AACnCY,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBN,MAAAA;AAAlB,KAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEe,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEX,KAAjB;AAAwB,IAAA,QAAQ,EAAEa,QAAlC;AAA4C,IAAA,QAAQ,EAAEC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhCD;;AAkCA,eAAeP,GAAf,C,CAEA;AACA","sourcesContent":["import React, { useReducer, useRef, useCallback } from 'react'; //상태 관리 useState\r\nimport TodoTemplate from './components/TodoTemplate';\r\nimport TodoInsert from './components/TodoInsert';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction createBulkTodos() {\r\n  const array = [];\r\n  for (let i = 1; i <= 2500; i++) {\r\n    array.push({\r\n      id: i,\r\n      text: '할 일 ${i}',\r\n      checked: false,\r\n    });\r\n  }\r\n  return array;\r\n}\r\n\r\n//const todoReducer = (state,action) => {\r\nfunction todoReducer(todos, action) {\r\n  switch (action.type) {\r\n    case 'INSERT': //새로 추가\r\n      //{type:INSERT, todo:{id:1, text:'todo', checked:false}}\r\n      return todos.concat(action.todo);\r\n    case 'REMOVE': //제거\r\n      //{type:'REMOVE',id:1}\r\n      return todos.filter((todo) => todo.id !== action.id);\r\n    case 'TOGGLE': //토글\r\n      //{type:'REMOVE},id:1}\r\n      return todos.map((todo) =>\r\n        todo.id === action.id ? { ...todo, checked: !todo.checked } : todo,\r\n      );\r\n    default:\r\n      return todos;\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  //상태값\r\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\r\n\r\n  const nextId = useRef(2501);\r\n  //고윳값으로 사용될 ID\r\n  //Ref를 사용하여 변수 담기\r\n\r\n  const onInsert = useCallback((text) => {\r\n    const todo = {\r\n      id: nextId.current,\r\n      text,\r\n      checked: false,\r\n    };\r\n    dispatch({ type: 'INSERT', todo });\r\n    nextId.current += 1; //nextId 1씩 더하기\r\n  }, []);\r\n\r\n  const onRemove = useCallback((id) => {\r\n    dispatch({ type: 'REMOVE', id });\r\n  }, []);\r\n\r\n  const onToggle = useCallback((id) => {\r\n    dispatch({ type: 'TOGGLE', id });\r\n  }, []);\r\n\r\n  return (\r\n    <TodoTemplate>\r\n      <TodoInsert onInsert={onInsert} />\r\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\r\n    </TodoTemplate>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n//미친 존나빨라짐 몇백만배로빨라짐;\r\n//useReducer를 사용합시다...\r\n"]},"metadata":{},"sourceType":"module"}
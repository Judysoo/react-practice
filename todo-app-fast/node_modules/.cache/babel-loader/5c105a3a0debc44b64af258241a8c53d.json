{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-practice\\\\todo-app-fast\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useCallback } from 'react';\nimport { List } from 'react-virtualized';\nimport TodoListItem from './TodoListItem';\nimport './TodoList.scss';\n/* todos 배열을 props로 받아온 후,(TodoItem으로 변환하여 렌더링)\r\n이를 배열 내장 함수 map(todos.map)을 사용하여 \r\n여러 개의 Todolist 컴포넌트로 변환하여 보여 줌*/\n\nconst TodoList = ({\n  todos,\n  onRemove,\n  onToggle\n}) => {\n  const rowRenderer = useCallback(({\n    index,\n    key,\n    style\n  }) => {\n    const todo = todos[index];\n    return /*#__PURE__*/React.createElement(TodoListItem, {\n      todo: todo,\n      key: key,\n      onRemove: onRemove,\n      ontoggle: onToggle,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }); //return 끝\n  }, [onRemove, onToggle, todos]);\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"TodoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"width=\", 512, \"height=\", 513, \"rowConut=\", todos.length, \"rowHeight=\", 57, \"rowRenderer=\", rowRenderer, \"list=\", todos, \"style=\", {\n    outline: 'none'\n  });\n};\n\nexport default React.memo(TodoList);","map":{"version":3,"sources":["D:/react-practice/todo-app-fast/src/components/TodoList.js"],"names":["React","useCallback","List","TodoListItem","TodoList","todos","onRemove","onToggle","rowRenderer","index","key","style","todo","length","outline","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,iBAAP;AAEA;;;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAClD,QAAMC,WAAW,GAAGP,WAAW,CAC7B,CAAC;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,GAAD,KAA2B;AACzB,UAAMC,IAAI,GAAGP,KAAK,CAACI,KAAD,CAAlB;AACA,wBACE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAEG,IADR;AAEE,MAAA,GAAG,EAAEF,GAFP;AAGE,MAAA,QAAQ,EAAEJ,QAHZ;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,KAAK,EAAEI,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFyB,CAUtB;AACJ,GAZ4B,EAa7B,CAACL,QAAD,EAAWC,QAAX,EAAqBF,KAArB,CAb6B,CAA/B;AAeA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,GADT,aAEU,GAFV,eAGYA,KAAK,CAACQ,MAHlB,gBAIa,EAJb,kBAKeL,WALf,WAMQH,KANR,YAOS;AAAES,IAAAA,OAAO,EAAE;AAAX,GAPT,CADF;AAWD,CA3BD;;AA6BA,eAAed,KAAK,CAACe,IAAN,CAAWX,QAAX,CAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { List } from 'react-virtualized';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\n/* todos 배열을 props로 받아온 후,(TodoItem으로 변환하여 렌더링)\r\n이를 배열 내장 함수 map(todos.map)을 사용하여 \r\n여러 개의 Todolist 컴포넌트로 변환하여 보여 줌*/\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todo = todos[index];\r\n      return (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={key}\r\n          onRemove={onRemove}\r\n          ontoggle={onToggle}\r\n          style={style}\r\n        />\r\n      ); //return 끝\r\n    },\r\n    [onRemove, onToggle, todos],\r\n  );\r\n  return (\r\n    <List className=\"TodoList\">\r\n      width={512}\r\n      height={513}\r\n      rowConut={todos.length}\r\n      rowHeight={57}\r\n      rowRenderer={rowRenderer}\r\n      list={todos}\r\n      style={{ outline: 'none' }}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}